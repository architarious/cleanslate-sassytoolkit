////////////////////////
// Mixins Partials
//
// All of your mixins should go in this file.
//
//Many mixins inspired from the following:
//Sacha Grief:  http://sachagreif.com/useful-sass-mixins/
//ZeroSixThree: http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
////////////////////////


///////////////////////////////////
///REM conversion mixins
//
//USAGE: $include rem-selector(font-size, 12); 
//USAGE: $include px2rem-selector(max-width, 600);
//Dependencies: Set variable for $root-font-size
///////////////////////////////////

@mixin rem-selector($selector,$target, $context:$root-font-size) {
      #{$selector} : rem($target) + px;
      #{$selector} : ($target) + rem;
  }


@mixin px2rem-selector($selector,$target, $context:$root-font-size) {
     #{$selector} : ($target) + px;
     #{$selector} : remcalc($target) + rem;
 }





///////////////////////////////////
///SVG Backgrounds with PNG and Retina Fallback mixin
//
//USAGE: @include background-image('brandpattern');
//Dependancies:  
// - images need to be saved in /img directory.
// - files must be named similiarly.  Example:  brandpattern.svg, brandpattern.png, brandpatternRet.png
// - for information on when/how to design for retina: http://isthisretina.com/ 
///////////////////////////////////
$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: 'Ret';

@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}



///////////////////////////////////
///BASE Animations and Keyframe Mixins
//
//Description: allows you to create name custom keyframes and then easily apply them with browser prefixes
//USAGE: 
//@include keyframes(slide-down) {
//  0% { opacity: 1; }
//  90% { opacity: 0; }
//}
//
//.element {
//  width: 100px;
//  height: 100px;
//  background: black;
//  @include animation('slide-down 5s 3');
//}
//References: http://www.w3schools.com/cssref/css3_pr_animation.asp 
//animation: name duration timing-function delay iteration-count direction fill-mode play-state;
///////////////////////////////////

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

///////////////////////////////////
///Standard Transition
//
//DESCRIPTION: Used to apply consistent transitions, while reducing code needed to be written
//DEFAULT: applies ease-in color transition of 0.2s by default. 
//USAGE: @include standard-transition(); OR @include standard-transition(box-shadow, 0.3s, ease-out); 
///////////////////////////////////
@mixin standard-transition($property:color, $duration:0.2s, $function:ease-in){
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $function;

  //@include transition-property(background, box-shadow);
  //@include transition-duration(0.2s);
  //@include transition-timing-function(ease-in);
}

///////////////////////////////////
///Standard Box-Shadow
//
//DESCRIPTION: Used to apply consistent box-shadows throughout site
//DEFAULT: same settings as buttons throughout site
//USAGE: @include standard-box-shadow(); OR @include standard-box-shadow(darken($black), 10); 
///////////////////////////////////
@mixin standard-box-shadow($shadow:tint($black,15), $h:0, $v:2px, $blur:1px, $spread:0){
  box-shadow: $shadow $h $v $blur $spread;
}

///////////////////////////////////
///Emboss Mixin
//
//DESCRIPTION: For whenever you want a box to look embossed
//USAGE: @include box-emboss(); or @include box-emboss(0.9, 0.01);
//DEPENDENCIES: notta
///////////////////////////////////

@mixin box-emboss($opacity:0.867, $opacity2:0.4774){
    box-shadow:set-alpha($white, $opacity) 0 1px 0, inset set-alpha($black, $opacity2) 0 1px 0;
}

///////////////////////////////////
///Letterpress Mixins
//
//DESCRIPTION: For whenever you want text to look like it was letterpressed
//USAGE: @include letterpress();, @include letterpress-dark(); or @include letterpress(0.9)
//DEPENDENCIES: set variables for $white and $black
///////////////////////////////////

@mixin letterpress($opacity:0.68541){
  text-shadow:0 1px 0 set-alpha($white, $opacity) ;
}

@mixin letterpress-dark($opacity:0.1618){
  text-shadow:0 1px 0 set-alpha($black, $opacity) ;
}


///////////////////////////////////
///Button Mixin
//
//USAGE: @include btn();  or @include btn($yourBackGroundColorHear, $yourShadowColor, $yourTextColorHear);
//Dependencies: set variables for $tertiary, $black, $white and $BlkCn
///////////////////////////////////
@mixin btn($bg-color:$tertiary, $shadow:tint($black, 15), $tx-color:$white){
    font-family: $BlkCn;
    letter-spacing:1px;
    position:relative;
    text-transform: uppercase;

    @include sassy-button( "flat", 3px, 16px, $bg-color, shade($bg-color, 20), $tx-color, inset);
    background-image:url(../img/noise.png);
    padding: 8px 16px;
    padding-right: 40px;
    @include standard-box-shadow($shadow);
    @include standard-transition(background-color);
    @include standard-transition(box-shadow);

    &:hover, &:focus{
      @include box-shadow(tint($shadow,10) 0 2px 4px);
      color:shade($white,10);
    }

    &:active{
      background:lighten($bg-color, 20);
      @include box-shadow(tint($shadow,40) 0 4px 6px);
    }

    &:visited{
      color:lighten($quadrary, 5);
      @include letterpress();
      text-decoration:none;
    }

    &.disabled {
    background: $gray-light-2;
    color: $gray;
     &:hover, &:focus, &:active{
      background: $gray-light-2;
     }
     &:before{
        background: $gray-light-3;
         &:hover:before, &:focus:before, &:active:before{
           background: $gray-light-3;
         }
     } 
    }//end .disabled


  &:before{
    background-color: shade($bg-color, 10);
    background-image: url(../img/right_arrow.png);
    background-repeat: no-repeat;
    background-position: center center;
    content: "";
    width: 24px;
    height: 24px;
    position: absolute;
    right: 8px;
    top: 42%;
    margin-top: -9px;
    @include border-radius(50%);
    @include box-shadow(darken($bg-color, 20) 0 2px 0 inset, lighten($bg-color, 20) 0 1px 0);
    @include standard-transition(background);
    @include standard-transition(box-shadow);
    }//end before

    &:hover:before, &:focus:before{
      background-color:shade($bg-color, 40);
      @include box-shadow(darken($bg-color, 60) 0 5px 0 inset, lighten($bg-color, 20) 0 1px 0);
    }

    &:active:before{
      background-color:lighten($bg-color, 15);
      @include box-shadow(darken($bg-color, 60) 0 1px 0 inset, lighten($bg-color, 20) 0 3px 0);
    }



  }//end btn




///////////////////////////////////
///Hide-Text Mixin
//
//DESCRIPTION: For whenever you want some text to disappear
//USAGE: @include hide-text();
//DEPENDENCIES: notta
///////////////////////////////////
@mixin hide-text{
  overflow:hidden;
  text-indent:-9000px;
  display:block;
}


///////////////////////////////////
///Visually Hidden Mixin and class
//
//DESCRIPTION: For whenever you want an entire block to disappear, but still be read by screen readers
//USAGE: @include visually-hidden(); or <a class="visually-hidden">Accessability 4evah</a>
//DEPENDENCIES: notta
///////////////////////////////////
@mixin visually-hidden{
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;

  &.focusable:active, &.focusable:focus{
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}
.visually-hidden{
  @include visually-hidden();
}


///////////////////////////////////
///Navigation-list
//
//DESCRIPTION: For whenever you want a horizontal list without all the hassle
//USAGE: @include navigation-list();
//DEPENDENCIES: notta
///////////////////////////////////
@mixin navigation-list {
    list-style-type:none;
    padding:0;
    margin:0;
    overflow:hidden;
    > li{
        display:block;
        float:left;
        &:last-child{
            margin-right:0px;
        }
    }
}